{
  "hash": "8f620b001cba18fd0038f2750a2df7b7",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Introduction to R\"\nsubtitle: \"Session 1\"\nauthor: \"\"\nfilters:\n  - diagram\ndiagram:\n  engine:\n    tikz:\n      header-includes:\n        - '\\usepackage{adjustbox,xcolor}'\n        - '\\usetikzlibrary{arrows, shapes}'\n        - '\\definecolor{UMdblue}{RGB}{0,28,61}'\n        - '\\definecolor{UMlblue}{RGB}{0,162,219}'\n        - '\\definecolor{UMorangered}{RGB}{232,78,16}'\n        - '\\definecolor{UMorange}{RGB}{243,148,37}'\n        - '\\definecolor{UMred}{RGB}{174,11,18}'\n---\n\n\n\n# Session Overview\n\n1.  [What is R?](#what-is-R)\n2.  [Installing R](#install-R)\n3.\t[First Steps in R](#open-R)\n4.  [What is RStudio?](#what-is-RStudio)\n5.  [Installing RStudio](#install-RStudio)\n6.\t[First Steps in RStudio](#open-Rstudio)\n7.\t[R Script](#R-script)\n8.\t[R Help](#R-help)\n9.\t[R Package Management System](#R-packages)\n\n# What is R? {#what-is-R}\n\n## What is R?\n\nGeneral info, to complete\n\n# Installing R {#install-R}\n\n## R Installation\nTo install R, go to [CRAN](https://cran.r-project.org/). At the time of writing, the website looks as follows:\n\n![](figures/website-R-1.png)\n\n\n## R Installation\nTo download, for instance, R for Windows, you arrive at the following page:\n\n![](figures/website-R-2.png)\n\n## R Installation\nNow download the latest version of R (Version 4.5.0 at the time of writing):\n\n![](figures/website-R-3.png)\n\n## R Installation\nStart the download process:\n\n![](figures/download-R-1.png)\n\n## R Installation\nContinue the download process:\n\n![](figures/download-R-2.png)\n\n## R Installation\nDownload completed:\n\n![](figures/download-R-3.png)\n\n# First Steps in R {#open-R}\n\n## Opening R\n\nOpen R, you should see the following:\n\n![](figures/open-R-1.png)\n\n## Opening R\n\nCheck your version of R:\n\n![](figures/open-R-2.png)\n\n## R Console\n\nThe R Console can be used to directly give in commands and display output:\n\n![](figures/R-console-1.png)\n\n## R Prompt\n\nUnder the default text that is already given in this window, you can see the R prompt, through which R indicates that it is ready to execute a new command.\n\n![](figures/R-console-2.png)\n\n## Executing your first command\n\nStart by using R as a simple calculator, try to enter after the R prompt:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n2+3\n```\n:::\n\n\nand hit <em>enter</em>.\n\nYou will see that R directly returns the output in the R console: \n\n\n::: {.cell}\n\n```{.r .cell-code}\n2+3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5\n```\n\n\n:::\n:::\n\n\n\nIf you want to re-execute your previous command, use the arrow key <em>↑</em>. To make changes to a command, you can use the <em>←, →</em> arrows and re-execute. To move to the next command, use the  <em>↓</em> arrow.\n\nFinally, when R receives an unfinished expression such as \n\n\n::: {.cell}\n\n```{.r .cell-code}\n2+\n```\n:::\n\n\nR will return the <em>+</em> symbol, thereby letting you know that you forgot to type something. You can either complete the command and then hit <em>enter</em> or exit the unfinished command via the <em>esc</em> button.\n\n\n## Exercises\n\nSome more easy exercises\n\n\n\n\n## Disadvantage R\n\nNo graphical user interface. Need for RStudio, put more text\n\n# What is RStudio? {#what-is-RStudio}\n\n## What is RStudio?\n\nGeneral info, to complete\n\n# Installing RStudio {#install-RStudio}\n\n## RStudio Installation\n\nTo download RStudio, go to [RStudio](https://posit.co/download/rstudio-desktop/). At the time of writing, the website looks as follows:\n\n![](figures/website-RStudio-1.png)\n\n## RStudio Installation\nStart the download process:\n\n![](figures/download-RStudio-1.png)\n\n# First Steps in RStudio {#open-RStudio}\n\n\n## Opening RStudio\n\nOpen RStudio, you should see the following:\n\n![](figures/open-RStudio-1.png)\n\n## Opening RStudio\n\nYou will recognize the R Console and see that RStudio is ready to receive input:\n\n![](figures/open-RStudio-2.png)\n\n\n## Exercise\n\nRe-execute the commands you executed before in R now in RStudio.\n\n\n## Structure in RStudio\n\nUnlike R, Studio is structured in different windows. You should currently see \n3 windows:\n\n- Left: R console\n- Top right: Display of objects in the global environment\n- Bottom right: Files, plots, packages, help, etc.\n    \n## Structure in RStudio\n![](figures/open-RStudio-3.png)\n\n\n\n## Need for R scripts\nSuppose you want to continue your work tomorrow. If you would now close RStudio, all of your work would be gone!\n\nTo avoid this problem, we will not give commands directly in R console, but save them in an R script.\n\n# R Script {#R-script}\n\n## R script\nWhile many simple calculations can be done using the command line, as soon as things get more complicated, scripts should be used\n\nto be continued \n\n# R Help {#R-help}\n\n## R Help\nto be continued later\n\n# R Package Management System {#R-packages}\n\n## R Package Management System\nto be continued later",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}