---
title: "Introduction to R"
subtitle: "Session 1"
author: ""
filters:
  - diagram
diagram:
  engine:
    tikz:
      header-includes:
        - '\usepackage{adjustbox,xcolor}'
        - '\usetikzlibrary{arrows, shapes}'
        - '\definecolor{UMdblue}{RGB}{0,28,61}'
        - '\definecolor{UMlblue}{RGB}{0,162,219}'
        - '\definecolor{UMorangered}{RGB}{232,78,16}'
        - '\definecolor{UMorange}{RGB}{243,148,37}'
        - '\definecolor{UMred}{RGB}{174,11,18}'
---

# Session Overview

1.  [What is R?](#what-is-R)
2.  [Installing R](#install-R)
3.	[First Steps in R](#open-R)
4.  [What is RStudio?](#what-is-RStudio)
5.  [Installing RStudio](#install-RStudio)
6.	[First Steps in RStudio](#open-Rstudio)
7.	[R Script](#R-script)
8.	[R Help](#R-help)
9.	[R Package Management System](#R-packages)

# What is R? {#what-is-R}

## What is R?

General info, to complete

# Installing R {#install-R}

## R Installation
To install R, go to [CRAN](https://cran.r-project.org/). At the time of writing, the website looks as follows:

![](figures/website-R-1.png)


## R Installation
To download, for instance, R for Windows, you arrive at the following page:

![](figures/website-R-2.png)

## R Installation
Now download the latest version of R (Version 4.5.0 at the time of writing):

![](figures/website-R-3.png)

## R Installation
Start the download process:

![](figures/download-R-1.png)

## R Installation
Continue the download process:

![](figures/download-R-2.png)

## R Installation
Download completed:

![](figures/download-R-3.png)

# First Steps in R {#open-R}

## Opening R

Open R, you should see the following:

![](figures/open-R-1.png)

## Opening R

Check your version of R:

![](figures/open-R-2.png)

## R Console

The R Console can be used to directly give in commands and display output:

![](figures/R-console-1.png)

## R Prompt

Under the default text that is already given in this window, you can see the R prompt, through which R indicates that it is ready to execute a new command.

![](figures/R-console-2.png)

## Executing your first command

Start by using R as a simple calculator, try to enter after the R prompt:
```{r, eval=FALSE}
2+3
```
and hit <em>enter</em>.

You will see that R directly returns the output in the R console: 
```{r}
2+3
```

If you want to re-execute your previous command, use the arrow key <em>↑</em>. To make changes to a command, you can use the <em>←, →</em> arrows and re-execute. To move to the next command, use the  <em>↓</em> arrow.

Finally, when R receives an unfinished expression such as 
```{r, eval=FALSE}
2+
```
R will return the <em>+</em> symbol, thereby letting you know that you forgot to type something. You can either complete the command and then hit <em>enter</em> or exit the unfinished command via the <em>esc</em> button.


## Exercises

Some more easy exercises




## Disadvantage R

No graphical user interface. Need for RStudio, put more text

# What is RStudio? {#what-is-RStudio}

## What is RStudio?

General info, to complete

# Installing RStudio {#install-RStudio}

## RStudio Installation

To download RStudio, go to [RStudio](https://posit.co/download/rstudio-desktop/). At the time of writing, the website looks as follows:

![](figures/website-RStudio-1.png)

## RStudio Installation
Start the download process:

![](figures/download-RStudio-1.png)

# First Steps in RStudio {#open-RStudio}


## Opening RStudio

Open RStudio, you should see the following:

![](figures/open-RStudio-1.png)

## Opening RStudio

You will recognize the R Console and see that RStudio is ready to receive input:

![](figures/open-RStudio-2.png)


## Exercise

Re-execute the commands you executed before in R now in RStudio.


## Structure in RStudio

Unlike R, Studio is structured in different windows. You should currently see 
3 windows:

- Left: R console
- Top right: Display of objects in the global environment
- Bottom right: Files, plots, packages, help, etc.
    
## Structure in RStudio
![](figures/open-RStudio-3.png)



## Need for R scripts
Suppose you want to continue your work tomorrow. If you would now close RStudio, all of your work would be gone!

To avoid this problem, we will not give commands directly in R console, but save them in an R script.

# R Script {#R-script}

## R script
While many simple calculations can be done using the command line, as soon as things get more complicated, scripts should be used

to be continued 

# R Help {#R-help}

## R Help
to be continued later

# R Package Management System {#R-packages}

## R Package Management System
to be continued later